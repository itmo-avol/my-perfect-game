{"version":3,"sources":["webpack:///webpack/bootstrap ed818ad4be230f9ca94f","webpack:///./scripts/src/All/htmlData.ts","webpack:///./scripts/src/All/getRandomInt.ts","webpack:///./scripts/src/index.ts","webpack:///./scripts/src/All/index.ts","webpack:///./scripts/src/All/initStartButton.ts","webpack:///./scripts/src/All/gameFunction.ts","webpack:///./scripts/src/All/gameCourse.ts","webpack:///./scripts/src/All/gameField.ts","webpack:///./scripts/src/All/gameButton.ts","webpack:///./scripts/src/All/Colors.ts","webpack:///./scripts/src/All/Borders.ts","webpack:///./scripts/src/All/gameColors.ts","webpack:///./scripts/src/All/timer.ts","webpack:///./scripts/src/All/initBackButton.ts","webpack:///./scripts/src/All/restartFunction.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed818ad4be230f9ca94f","class htmlData{\r\n    static firstPageId: string[] = ['header-1', 'main-1'];\r\n    static secondPageId: string[] = ['img-2','header-2', 'main-2'];\r\n    static idButtons:string = 'buttons';\r\n    static idStartButton:string = 'start';\r\n    static idTimer:string = 'timer';\r\n    static idButton = \"button-\";\r\n    static idResult = \"result\";\r\n    static idBackButton = \"back-button\";\r\n\r\n    //скрыть элементы страницы по их id\r\n    static hidePageElements(i: number):void{\r\n        if ( i!=1 && i!=2 )\r\n            throw new Error('Unknown parameter (not 1/2)');\r\n        let PageElementsId:string[] = (i==1)? htmlData.firstPageId : htmlData.secondPageId;\r\n        let elem:HTMLElement;\r\n        PageElementsId.forEach( (value:string)=>{\r\n            elem = document.getElementById(value) as HTMLElement;\r\n            elem.style.display = \"none\";\r\n        }\r\n        )\r\n    }\r\n\r\n    //показать элементы страницы по их id\r\n    static showPageElements(i: number):void{\r\n        if ( i!=1 && i!=2 )\r\n            throw new Error('Unknown parameter (not 1/2)');\r\n        let PageElementsId:string[] = (i==1)? htmlData.firstPageId : htmlData.secondPageId;\r\n        let elem:HTMLElement;\r\n        PageElementsId.forEach( (value:string)=>{\r\n            elem = document.getElementById(value) as HTMLElement;\r\n            elem.style.display = \"\";\r\n        }\r\n        )\r\n    }\r\n\r\n    static initStartElements():void{\r\n        let Buttons:HTMLElement = document.getElementById(htmlData.idButtons) as HTMLElement;\r\n        Buttons.innerHTML='\\n';\r\n        let startButton:HTMLElement = document.getElementById(htmlData.idStartButton) as HTMLElement;\r\n        startButton.style.display = '';\r\n        let timer:HTMLElement = document.getElementById(htmlData.idTimer) as HTMLElement;\r\n        timer.style.display = 'none';\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    htmlData as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/htmlData.ts","function getRandomInt(min:number, max:number):number    //получение случайного целого числа\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport {\r\n    getRandomInt as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/getRandomInt.ts","\r\nimport main from './All/index';\r\n\r\nmain();\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/index.ts","\r\nimport initGameButton from './initStartButton';\r\nimport initBackButton from './initBackButton';\r\nimport htmlData from './htmlData';\r\n\r\nfunction main():void\r\n{\r\n    try{\r\n    //инициализируем вид страницы\r\n    initGameButton();\r\n    initBackButton();  //сохраняем объект таймера, чтобы иметь возможность его почистить (без деструктора)\r\n    htmlData.hidePageElements(2);   //скрываем элементы второго плана\r\n    htmlData.showPageElements(1);   //показываем первого\r\n\r\n    }\r\n    catch(err) {\r\n        console.log(err); \r\n        return;\r\n    }\r\n}\r\n\r\nexport {\r\n    main as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/index.ts","\r\nimport game from './gameFunction';\r\nimport htmlData from './htmlData';\r\n\r\n//инициализация кнопки начала игры\r\nfunction initGameButton():void{\r\n\r\n    let startButton: HTMLButtonElement = document.getElementById(htmlData.idStartButton) as HTMLButtonElement; \r\n    let timer: HTMLButtonElement = document.getElementById(htmlData.idTimer) as HTMLButtonElement; \r\n    startButton.addEventListener ('click', (event: Event): void =>    //вешаем слушатель события 'click'\r\n        {\r\n            if (event != undefined) //если пользователь кликнул\r\n            {   \r\n                startButton.style.display=\"none\";    //скрываем кнопку и запускаем игру\r\n                timer.style.display='';\r\n                game();\r\n            }\r\n        }); \r\n}\r\n\r\n\r\nexport {\r\n    initGameButton as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/initStartButton.ts","\r\nimport gameCourse from './gameCourse';\r\nimport gameField from './gameField';\r\nimport timer from './timer';\r\n\r\n//основной код\r\nfunction game():void {\r\n\r\n    let M:number = 4;   //строки\r\n    let N:number = 5;   //столбцы\r\n    let gameTime:number = 3*60; //время игры\r\n    let field:gameField;    //игровое поле\r\n\r\n    try{\r\n        field = new gameField(M, N);\r\n    }\r\n    catch(err) {        //если поле не было создано из-за ошибки, бросаем ее выше\r\n        throw err; \r\n    }\r\n\r\n    let gameTimer:timer = new timer(gameTime);\r\n    let game:gameCourse = new gameCourse(field, gameTimer, gameTime);\r\n    game;\r\n    gameTimer;\r\n}\r\n\r\nexport {\r\n    game as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/gameFunction.ts","\r\nimport gameField from './gameField';\r\nimport timer from './timer';\r\nimport gameButton from './gameButton';\r\nimport htmlData from './htmlData';\r\n\r\n\r\n//класс хода игры\r\nclass gameCourse\r\n{\r\n    constructor(field: gameField, gameTic:timer, time:number){\r\n        this.field = field;\r\n        this.closedButtonsPairs = Math.floor(field.N/2);\r\n        this.addButtonsListeners(field);\r\n        let game: gameCourse = this;\r\n        this.timer = setTimeout(()=>{game.endOfGame(game)}, time*1000);\r\n        this.gameTic = gameTic;\r\n    }\r\n\r\n\r\n    field:gameField;    //игровое поле, над которым идет управление\r\n    isTheFirst:boolean = false;    //логическая переменная: есть ли на поле открытая ячейка (первая), помимо выбранной\r\n    waitingAnswerButton:gameButton;     //кнопка, ждущая ответа (первая выбранная)\r\n    closedButtonsPairs:number;          //количество зафиксированных (угаданных) пар\r\n    timer:number;                   //идентификатор собственного таймера\r\n    gameTic: timer;\r\n\r\n    addButtonsListeners(buttonField: gameField):void    //добавление слушателя событмия на каждую кнопку\r\n    {\r\n        buttonField.button.forEach(item => (    //на HtML-кнопки каждого объекта класса gameButton вешаем обработчик события\r\n            item.button.addEventListener ('click', (event: Event): void =>    //вешаем слушатель события 'click'\r\n            {\r\n                if (event != undefined) //если пользователь кликнул\r\n                {   \r\n                    if ( !item.isOpen )     // если кнопка закрыта\r\n                        this.handleClick(item); // вызывается функция обработки хода игры\r\n                }\r\n            })\r\n        )\r\n        );\r\n    }\r\n\r\n    handleClick (elem: gameButton): void   //обработка клика по кнопке (элемент, хранящий кнопку и инф-ю о ней)\r\n    {\r\n        elem.setOpenStyle();    //открываем элемент(кнопку)\r\n        if ( !this.isTheFirst ){        //если это первый открытый элемент\r\n            this.waitingAnswerButton = elem;    //сохраняем его для дальнейшего сравнения\r\n            this.isTheFirst = true;     \r\n        }\r\n        else{                               //если это второй открытый элемент, проверяем:\r\n            if (this.waitingAnswerButton.color == elem.color){  //если цвета совпадают, элементы фиксируются\r\n                this.waitingAnswerButton.setFixedStyle();       \r\n                elem.setFixedStyle();\r\n                this.closedButtonsPairs--;\r\n            }\r\n            else{                          //если цвета различаются, то элементы закрываются через 0.5 секунды\r\n                let game: gameCourse = this;\r\n                setTimeout( ()=>{   //обертка для таймера\r\n                    game.closeButtons(elem);}\r\n                    ,300);\r\n            }\r\n            this.isTheFirst = false;//оба элемента были проверены, поэтому логическая переменная наличия ожидающей кнопки==false\r\n        }\r\n        if ( !this.closedButtonsPairs )     //если все кнопки открыты (не осталось закрытых пар)\r\n        {\r\n            clearTimeout(this.timer);       //вырубаем счетчик/таймер\r\n            this.endOfGame(this);               //заканчиваем игру\r\n        }\r\n            \r\n    };\r\n\r\n    //закрываем обе кнопки (без this!)\r\n    closeButtons(elem:gameButton):void{\r\n        this.waitingAnswerButton.setClosedStyle();\r\n        elem.setClosedStyle();\r\n    }\r\n    \r\n    //ПРОБЛЕМА: document не меняется на \"result.html\"\r\n    //окончание игры (без this!)\r\n    /*endOfGame(game:gameCourse): void {\r\n        window.location.replace(\"result.html\");     //загружаем страницу результата \r\n        let elem:HTMLElement = window.document.getElementById(game.idResult) as HTMLElement;\r\n        let answer:string;                      //сообщение о результате игры\r\n        if ( !game.closedButtonsPairs ){        //если все кнопки вскрыты - победа\r\n            answer = \"<p> Вы дизайнер! </p>\";\r\n        }\r\n        else{                                   //иначе - проигрыш\r\n            answer = \"<p> Вы не дизайнер! </p>\";\r\n        }\r\n        elem.innerHTML = answer;    //помещаем информацию на страницу\r\n    }*/\r\n\r\n    endOfGame(game:gameCourse): void {\r\n        game.gameTic.finishTimer(game.gameTic);\r\n        htmlData.hidePageElements(1);\r\n        let elem:HTMLElement = window.document.getElementById(htmlData.idResult) as HTMLElement;\r\n        let answer:string;                      //сообщение о результате игры\r\n        if ( !game.closedButtonsPairs ){        //если все кнопки вскрыты - победа\r\n            answer = \"<p> Вы дизайнер! </p>\";\r\n        }\r\n        else{                                   //иначе - проигрыш\r\n            answer = \"<p> Вы не дизайнер! </p>\";\r\n        }\r\n        elem.innerHTML = answer;    //помещаем информацию на страницу\r\n        htmlData.showPageElements(2);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport {\r\n    gameCourse as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/gameCourse.ts","\r\nimport gameButton from './gameButton';\r\nimport gameColors from './gameColors';\r\nimport htmlData from './htmlData';\r\nimport getRandomInt from './getRandomInt';\r\nimport Colors from './Colors';\r\n\r\n//класс, отвечающий за поле (массив кнопок)\r\nclass gameField{\r\n    constructor(m:number, n:number) {\r\n        this.m = m;\r\n        this.n = n;\r\n        let N = m*n;\r\n        if (N % 2)  \r\n            throw new Error('Entered uneven count of buttons');\r\n\r\n        this.formingField();\r\n        this.N = N;\r\n        this.initButtonsArray();  //инициализируем массив кнопок (сторого после формирования поля!)\r\n        try{\r\n            this.table = new gameColors(10, Math.floor(this.N/2));  //создаем таблицу используемых цветов \r\n        }\r\n        catch(err){ //если количество цветов недостаточно => ошибка\r\n            throw err;\r\n        }\r\n        //try{\r\n            this.initButtonColor();   //задаем кнопкам цвета (по данному коду, всех цветов должно хватить)\r\n        // }\r\n        // catch(err){\r\n        //     throw err;\r\n        // }\r\n    }\r\n\r\n    button: gameButton[]=[];   //массив объектов кнопок\r\n    m:number;       //количество строк\r\n    n:number;       //количество стоблцов\r\n    N: number;      //количесвто элементов\r\n    table: gameColors;  //таблица цветов\r\n\r\n    formingField():void{    //формирование поля игры\r\n        let field:HTMLDivElement = document.getElementById(htmlData.idButtons) as HTMLDivElement;\r\n        let htmlField:string = '';  //переменная под содержимое HTML-кода для создания поля / набора кнопок\r\n        for( let i:number = 0; i<this.m; i++ ){ \r\n            let htmlButtons:string='';\r\n            for( let j:number = 0; j<this.n; j++)   //для каждого столбца прописываем тег для кнопки с заданным id\r\n            {\r\n                htmlButtons += `\\t<button id=\"${htmlData.idButton}${i*this.n+j}\" class=\"button\"></button>\\n`;\r\n            }\r\n            htmlButtons += '<br>';         //в конце каждой строки ставим тег перехода на новую строку \r\n            //htmlButtons += (i != this.m-1) ?'<br>':'';         //в конце каждой строки ставим тег перехода на новую строку \r\n            htmlField += htmlButtons;       //добавляем к результату\r\n        }\r\n        field.innerHTML = htmlField;    //вставляем код в файл\r\n    }\r\n\r\n    initButtonsArray():void { //инициализация(заполнение) массива кнопок\r\n        for (let i:number=0; i<this.N; i++){\r\n            //получаем объекты кнопок \r\n            let elem:gameButton = new gameButton(document.getElementById(htmlData.idButton+i) as HTMLButtonElement);  \r\n            this.button.push(elem);\r\n        }\r\n    }\r\n\r\n    initButtonColor():void {\r\n        //инициализация поля \"цвет\" для каждой кнопки (цвета берутся в случайном порядке, по близости)\r\n        let randomColor:Colors = this.table.getRandomColor(); \r\n        let n:number=Math.floor(this.N/2);\r\n        for (let i: number=0; i<n; i+=1){\r\n            //try{\r\n                randomColor=this.table.getUniqueClosestColor(randomColor);   //выбираем случайный цвет в радиусе дисперсии(опорная точка)\r\n            //}\r\n            // catch(err){\r\n            //     throw err;\r\n            // };\r\n            let index1, index2: number|undefined;\r\n            index1 = this.getEmptyArrayIndex();   //случайным образом получаем индекс двух свободных элементов\r\n            if (index1!=undefined){    //если вернулись индексы \r\n                this.button[index1].color=randomColor;  //в два свободных элемента помещается случайный цвет\r\n                console.log(index1, randomColor);       //для проверки своего зрения\r\n            }\r\n            index2 = this.getEmptyArrayIndex();  \r\n            if (index2!=undefined){    //если вернулись индексы \r\n                this.button[index2].color=randomColor;\r\n                console.log(index2, randomColor);       //для проверки своего зрения\r\n            }\r\n            else{\r\n                break;  //если пустых элементов больше нет, то прерываем цикл\r\n            }\r\n        }\r\n    }\r\n\r\n    //получение индекса случайного свободного элемента массива, размерностью N (для случайного задания цветов)\r\n    getEmptyArrayIndex():number|undefined{ \r\n        let index:number = getRandomInt(0, this.N-1);   //выбираем случайным образом элемент\r\n        let i=0;\r\n        //пока выбранный элемент не будет пуст, идем вправо и по кругу (по массиву) в поисках нового:\r\n        while (this.button[index].color!=undefined){  \r\n            index = (index+1)%this.N;\r\n            if (++i == this.N)\r\n                return undefined;\r\n        }\r\n        return index;   //возвращаем индекс найденного элемента\r\n    };\r\n\r\n    //проверка, все ли кнопки вскрыты:\r\n    isFixedAll():boolean{\r\n        this.button.forEach((element):any => {\r\n            if ( !element.isOpen )\r\n                return false;\r\n        });\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    gameField as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/gameField.ts","\r\nimport Colors from './Colors';\r\nimport Borders from './Borders';\r\n\r\n//класс кнопки (используемой на поле)\r\nclass gameButton{\r\n    constructor(button: HTMLButtonElement){  \r\n        //конструктор для инициализации объекта кнопки, ее индекса, показателя открытости кнопки\r\n        this.button = button;\r\n        this.isOpen = false;    \r\n        this.setClosedStyle();\r\n    }\r\n    button:HTMLButtonElement;   //соответствующий элмент html\r\n    isOpen:boolean; //is кнопка открыта/зафискирована\r\n    color: Colors|undefined;\r\n\r\n    setClosedStyle(){   //Устанавливаем стиль \"закрытой кнопки\" (невскрытая кнопка/иконка)\r\n        this.button.style.backgroundColor = 'white';  \r\n        this.button.style.borderColor = 'black';\r\n        this.button.style.borderWidth = Borders[0];\r\n        this.isOpen = false;\r\n    }\r\n\r\n    setOpenStyle(){     //Устанавливаем стиль \"открытой кнопки\" (в режиме ожидания выбора следующей кнопки)\r\n        this.button.style.backgroundColor = Colors[this.color == undefined? 0: this.color];\r\n        this.button.style.borderWidth = Borders[2];\r\n        this.isOpen = true;\r\n    }\r\n\r\n    //Устанавливаем стиль \"зафиксированной кнопки\" (для угаданных кнопок) - всегда вызывается после setOpenStyle()\r\n    setFixedStyle(){      \r\n        this.button.style.borderWidth = Borders[1];\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    gameButton as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/gameButton.ts","//Цвета, используемые в таблице цветов:\r\nenum Colors{Maroon, DarkRed, FireBrick, Red, Salmon, Tomato, Coral, OrangeRed, Chocolate, SandyBrown, DarkOrange, Orange, DarkGoldenrod, Goldenrod, Gold, Olive, Yellow, YellowGreen, GreenYellow, Chartreuse, LawnGreen, Green, Lime, LimeGreen, SpringGreen, MediumSpringGreen, Turquoise, LightSeaGreen, MediumTurquoise, Teal, DarkCyan, Aqua, Cyan, DarkTurquoise, DeepSkyBlue, DodgerBlue, RoyalBlue, Navy, DarkBlue, MediumBlue, Blue, BlueViolet, DarkOrchid, DarkViolet, Purple, DarkMagenta, Fuchsia, Magenta, MediumVioletRed, DeepPink, HotPink, Crimson, Brown, IndianRed, RosyBrown, LightCoral, Snow, MistyRose, DarkSalmon, LightSalmon, Sienna, SeaShell, SaddleBrown, Peachpuff, Peru, Linen, Bisque, Burlywood, Tan, AntiqueWhite, NavajoWhite, BlanchedAlmond, PapayaWhip, Moccasin, Wheat, Oldlace, FloralWhite, Cornsilk, Khaki, LemonChiffon, PaleGoldenrod, DarkKhaki, Beige, LightGoldenrodYellow, LightYellow, Ivory, OliveDrab, DarkOliveGreen, DarkSeaGreen, DarkGreen, ForestGreen, LightGreen, PaleGreen, Honeydew, SeaGreen, MediumSeaGreen, Mintcream, MediumAquamarine, Aquamarine, DarkSlateGray, PaleTurquoise, LightCyan, Azure, CadetBlue, PowderBlue, LightBlue, SkyBlue, LightskyBlue, SteelBlue, AliceBlue, SlateGray, LightSlateGray, LightsteelBlue, CornflowerBlue, Lavender, GhostWhite, MidnightBlue, SlateBlue, DarkSlateBlue, MediumSlateBlue, MediumPurple, Indigo, MediumOrchid, Plum, Violet, Thistle, Orchid, LavenderBlush, PaleVioletRed, Pink, LightPink, Black, DimGray, Gray, DarkGray, Silver, LightGrey, Gainsboro, WhiteSmoke, White}\r\n\r\nexport {\r\n    Colors as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/Colors.ts","//Возможные варианты границ кнопок:\r\nenum Borders{thin, medium, thick}\r\n\r\nexport {\r\n    Borders as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/Borders.ts","\r\nimport Colors from './Colors';\r\nimport getRandomInt from './getRandomInt';\r\n\r\nclass gameColors    //таблица цветов для данной игры\r\n{\r\n    constructor(dis:number, n?:number ){    //(дисперсия - разброс поиска ближайшего цвета, количество цветов)\r\n        if ( n!=undefined )\r\n            if ( n > gameColors.N_COLOR )\r\n                throw new Error(\"A lot of recuired colors.\");   //сообщает о невозможности предоставления такого количества цветов\r\n        this.dis = dis;\r\n    }\r\n    static N_COLOR:number=140;\r\n    usedColors:Colors[]=[];    //массив цветов, которые уже были предоставлены функциями класса для таблицы\r\n    dis:number;     //разброс цветов для выбора следующего\r\n\r\n    isColorUsed(color:Colors):boolean{      //проверка, использовался ли цвет до этого\r\n    let n:number = this.usedColors.length;\r\n        for(let i=0; i<n; i++){\r\n            if (color==this.usedColors[i])  //если обнаружено совпадение с ранее используемыми => true (иначе false)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //Получение \"уникального\" (ранее не используемого) ближайшего цвета (сначала ищет в радиусе потом по мере отдаления)\r\n    //вх., тут и далее: цвет относительно которого ищем новый\r\n    getUniqueClosestColor(color:Colors):Colors{   \r\n        let newColor:Colors;\r\n        newColor = this.getCloseColor(color);  //получаем случайным образом цвет, лежащий в необходимом радиусе\r\n        if (this.isColorUsed(newColor)){            //если цвет использовался, ищем новый:\r\n            let newColorResult:Colors|undefined = this.getUncolissionColor(color);  //поиск ближайшего незанятого цвета среди всех\r\n            if (newColorResult != undefined){\r\n                newColor = newColorResult;              //если цвет был найден, запоминаем его\r\n            }\r\n            else{\r\n                throw new Error('Reserved unique colors are over.');    //если цвет не был найден сообщаем об ошибке\r\n            }\r\n        }\r\n        this.usedColors.push(newColor);   //найденный цвет помещаем в массив используемых цветов\r\n        return newColor;            //возвращаем цвет\r\n    }\r\n\r\n    //Поиск любого \"неконфликтующего\"/неповторяющегося цвета:\r\n    getUncolissionColor(color:Colors):Colors|undefined{ \r\n        let newColor:Colors|undefined = this.getClosestOriginalColor(color);    //ищем цвет в необходимом радиусе\r\n            if ( newColor == undefined ){\r\n                newColor = this.getAnyAnotherColor(color);  //если он не найден ищем его по всей таблице по мере отдаления от точки поиска\r\n            }\r\n        return newColor;    //возвращаем найденный цвет или undefined\r\n    }\r\n\r\n    //поиск ближайшего неповторимого цвета:\r\n    getClosestOriginalColor(color:Colors):Colors|undefined{\r\n        let newColor:Colors|undefined = this.getClosestLeftOriginalColor(color);    //ищем ближайший цвет в радиусе слева\r\n        if ( newColor == undefined ){\r\n            newColor = this.getClosestRightOriginalColor(color);     //если он не найден, ищем ближайший цвет в радиусе справа\r\n        }\r\n        return newColor;    //возвращаем найденный цвет или undefined\r\n    }\r\n\r\n    //поиск слева ближайшего неповторимого цвета в радиусе дисперсии:\r\n    getClosestLeftOriginalColor(color:Colors):Colors|undefined{ \r\n        let min:Colors = this.getMinCloseColor(color);\r\n        for(let i:Colors=color; i>=min; i--){   //начиная от текущего идем влево\r\n            if ( !this.isColorUsed(i) ){\r\n                return i;                       //если найден неиспользуемый цвет возвращаем его\r\n            }\r\n        }\r\n        return undefined;               //если цвет не найден => undefined\r\n    }\r\n\r\n    //поиск справа ближайшего неповторимого цвета в радиусе дисперсии:\r\n    getClosestRightOriginalColor(color:Colors):Colors|undefined{ \r\n        let max:Colors = this.getMaxCloseColor(color);\r\n        for(let i:Colors=color; i<=max; i++){   //начиная от текущего идем вправо\r\n            if ( !this.isColorUsed(i) ){\r\n                return i;                       //если найден неиспользуемый цвет возвращаем его\r\n            }\r\n        }\r\n        return undefined;//если цвет не найден => undefined\r\n    }\r\n\r\n\r\n    //ищем любой цвет, начиная от радиуса дисперсии:\r\n    getAnyAnotherColor(color:Colors):Colors|undefined{\r\n        let newColor:Colors|undefined = this.getAnyLeftOriginalColor( this.getMinCloseColor(color) );  //ищем цвет слева по таблице\r\n        if ( newColor == undefined ){\r\n            newColor = this.getAnyRightOriginalColor( this.getMaxCloseColor(color) );   //ищем цвет справа по таблице\r\n        }\r\n        return newColor;    //возвращаем найденный цвет или undefined\r\n    }\r\n\r\n    //поиск любого неповторяющегося цвета слева по таблице от входной точки\r\n    getAnyLeftOriginalColor(color:Colors):Colors|undefined{ \r\n        for(let i:Colors=color; i>=0; i--){\r\n            if ( !this.isColorUsed(i) ){    //если найден неиспользуемый цвет => его\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;   //иначе => undefined\r\n    }\r\n\r\n    //поиск любого неповторяющегося цвета справа по таблице от входной точки\r\n    getAnyRightOriginalColor(color:Colors):Colors|undefined{ \r\n        for(let i:Colors=color; i<gameColors.N_COLOR; i++){\r\n            if ( !this.isColorUsed(i) ){    //если найден неиспользуемый цвет => его\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;    //иначе => undefined\r\n    }\r\n\r\n\r\n    //выбор случайным образом близкого цвета в радиусе дисперсии:\r\n    getCloseColor(color:Colors):Colors{   //Цвет, относительно которого ищем близкий, дисперсия(радиус поиска)\r\n       let newRandomColor:Colors;\r\n       let min,max:Colors;\r\n       min = this.getMinCloseColor(color);   //находим границы разброса нового случайного цвета\r\n       max = this.getMaxCloseColor(color);\r\n       newRandomColor = getRandomInt(min, max); //новый случайный цвет берется из этих границ\r\n       return newRandomColor;\r\n    };\r\n\r\n    getMinCloseColor(color:Colors):Colors{  //наиболее дальний слева цвет в радиусе dis\r\n        return (color - this.dis) < 0 ? 0 : (color - this.dis);   \r\n    }\r\n\r\n    getMaxCloseColor(color:Colors):Colors{    //наиболее дальний справа цвет в радиусе dis\r\n        return (color + this.dis) >= gameColors.N_COLOR ? gameColors.N_COLOR-1 : (color + this.dis);\r\n    }\r\n\r\n    getRandomColor():Colors{    //получение случайного цвета из таблицы цветов (опорной точки, без сохранения в массив)\r\n        let color:Colors = getRandomInt(0, gameColors.N_COLOR-1);\r\n        //this.usedColors.push(color);    //сохранение цвета в массив используемых цветов\r\n        return color;\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    gameColors as default,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/gameColors.ts","\r\nimport htmlData from './htmlData';\r\n\r\n//класс таймера:\r\nclass timer{\r\n\r\n    constructor(seconds:number){\r\n        this.output = document.getElementById(htmlData.idTimer) as HTMLElement; //сохраняем элемент, куда будут выводиться значения таймера\r\n        this.reserve = this.remainTime = seconds;   \r\n        this.startTimer(); \r\n    }\r\n\r\n    output: HTMLElement;    //элементHTML, куда будут выводиться значения таймера\r\n    remainTime: number;     //оставшееся время работы в секундах\r\n    timerId: number;        //идентификатор таймера (интервального)\r\n    reserve:number;         //изначальный временной интервал (в секундах)\r\n\r\n    startTimer():void{  //запуск таймера\r\n        // начать повторы с интервалом 1 сек\r\n        let timer: timer = this;\r\n        this.timerId = setInterval(()=>{\r\n            timer.timerIteration(timer);}, \r\n            1000);\r\n    }\r\n\r\n    //итерация таймера, возвращат информацию о том, вышло ли время работы таймера\r\n    timerIteration(timer:timer):boolean{\r\n        if ( !timer.remainTime-- )   //если время вышло, завершаем таймер (постфикс -> показываем последние цифры: 00:00)\r\n        {\r\n            timer.finishTimer(timer);\r\n            return true;\r\n        }  \r\n        let min:number = Math.floor(timer.remainTime/60);    //получение минут и секунд\r\n        let sec:number = timer.remainTime%60;\r\n        //вывод в HTML, аналогично: '<p>'+min+': '+ (sec<10 ? '0'+sec :sec)+'</p>'\r\n        timer.output.innerHTML=`<p>${(min < 10 ? '0' + min : min)}:${(sec<10 ? '0'+sec :sec)}</p>`;    \r\n        return false;\r\n    }\r\n\r\n    //завершение таймера\r\n    finishTimer(timer:timer):void{\r\n        clearInterval(timer.timerId);\r\n        timer.remainTime = 0;\r\n    }\r\n}\r\n\r\nexport {\r\n    timer as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/timer.ts","\r\nimport restart from './restartFunction';\r\nimport htmlData from './htmlData';\r\n\r\n//инициализация кнопки повтора игры\r\nfunction initBackButton():void{\r\n\r\n    let backButton: HTMLButtonElement = document.getElementById(htmlData.idBackButton) as HTMLButtonElement; \r\n\r\n    backButton.addEventListener ('click', (event: Event): void =>    //вешаем слушатель события 'click'\r\n        {\r\n            if (event != undefined) //если пользователь кликнул\r\n            {   \r\n                restart();\r\n            }\r\n        }); \r\n}\r\n\r\nexport {\r\n    initBackButton as default,};\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/initBackButton.ts","import htmlData from './htmlData';\r\n\r\nfunction restart():void\r\n{\r\n    //возвращаем страничку к первоначальному виду:\r\n    htmlData.hidePageElements(2);   //скрываем элементы второго плана\r\n    htmlData.showPageElements(1);   //показываем первого\r\n    htmlData.initStartElements();   //инициализация начальных элементов\r\n}\r\n\r\nexport {\r\n    restart as default,};\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/src/All/restartFunction.ts"],"sourceRoot":""}